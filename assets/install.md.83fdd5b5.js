import{_ as s,o as a,c as n,S as l}from"./chunks/framework.233e4693.js";const d=JSON.parse('{"title":"Empezar","description":"","frontmatter":{},"headers":[],"relativePath":"install.md","filePath":"install.md"}'),o={name:"install.md"},p=l(`<h1 id="empezar" tabindex="-1">Empezar <a class="header-anchor" href="#empezar" aria-label="Permalink to &quot;Empezar&quot;">​</a></h1><h2 id="instalacion" tabindex="-1">Instalación <a class="header-anchor" href="#instalacion" aria-label="Permalink to &quot;Instalación&quot;">​</a></h2><p><a href="https://github.com/ecanquiz/node-auto-crudx" target="_blank" rel="noreferrer">https://github.com/ecanquiz/node-auto-crudx</a></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">This</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">project</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">was</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">created</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Node</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TypeScript.</span></span>
<span class="line"><span style="color:#FFCB6B;">Run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"><span style="color:#FFCB6B;">Run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tsc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--watch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Open</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">another</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">terminal</span></span>
<span class="line"><span style="color:#FFCB6B;">Run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nodemon</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dist/app.js</span></span>
<span class="line"><span style="color:#FFCB6B;">The</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">generated</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">code</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">will</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">be</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">written</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./output</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">folder</span></span></code></pre></div>`,4),e=[p];function t(r,c,C,i,y,A){return a(),n("div",null,e)}const h=s(o,[["render",t]]);export{d as __pageData,h as default};
