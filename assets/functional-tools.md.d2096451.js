import{_ as s,o as n,c as a,S as l}from"./chunks/framework.233e4693.js";const F=JSON.parse('{"title":"Herramientas Funcionales (JSON)","description":"","frontmatter":{},"headers":[],"relativePath":"functional-tools.md","filePath":"functional-tools.md"}'),o={name:"functional-tools.md"},e=l(`<h1 id="herramientas-funcionales-json" tabindex="-1">Herramientas Funcionales (JSON) <a class="header-anchor" href="#herramientas-funcionales-json" aria-label="Permalink to &quot;Herramientas Funcionales (JSON)&quot;">​</a></h1><p>Tenga en cuenta las funciones del objeto <code>fn</code> como herramientas para generar CRUDs.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    addCommaToArr</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Function: addCommaToArr</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    foreignTableName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Function: foreignTableName</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    singular</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Function: singular</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    uCamelCase</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Function: uCamelCase</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    v</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      excludeFields</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Function: excludeFields</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">      noId</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Function: noId</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">      noIdAndExcludeFields</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Function: noIdAndExcludeFields</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// omitted for brevity ...</span></span></code></pre></div><h2 id="fn-addcommatoarr" tabindex="-1"><code>fn.addCommaToArr</code> <a class="header-anchor" href="#fn-addcommatoarr" aria-label="Permalink to &quot;\`fn.addCommaToArr\`&quot;">​</a></h2><p>Suponga que quiere renderizar un arreglo separado por coma (<code>&quot;, &quot;</code>) a excepción del útimo elemento. Puede hacerlo utilizando <code>fn.addCommaToArr</code>. Esta función recibe como argumentos:</p><ul><li>El arreglo que desea recorrer</li><li>El índice</li><li>El descuento de posiciones</li></ul><p><code>template-file.txt</code></p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">const someStuff = [&lt;% tableStructure.forEach(function(field, index) {</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    &#39;&lt;%- field.column_name; %&gt;&#39;&lt;%= fn.addCommaToArr(tableStructure, index, 0) -%&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">});%&gt; </span></span>
<span class="line"><span style="color:#A6ACCD;">];</span></span></code></pre></div><p>Tenga en cuenta cómo en el último elemento no se colocó la coma (<code>&quot;, &quot;</code>).</p><p><code>rendering-file.js</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> someStuff </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">     </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">     </span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">baz</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="fn-foreigntablename" tabindex="-1"><code>fn.foreignTableName</code>: <a class="header-anchor" href="#fn-foreigntablename" aria-label="Permalink to &quot;\`fn.foreignTableName\`:&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> foreignTableName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">columnName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">tableForeignKeysAssoc</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TableMasterForeignKeysAssoc</span><span style="color:#A6ACCD;">[]</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">&lt;form @submit.prevent=&quot;submit&quot;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;div class=&quot;grid lg:grid-cols-2 gap-4&quot;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;% tableStructure.forEach(function(field) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    if  (![&#39;id&#39;, &#39;created_at&#39;, &#39;updated_at&#39;, &#39;deleted_at&#39;].includes(field.column_name)) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      if (field.data_type === &quot;character varying&quot;) {%&gt;  &lt;div class=&quot;block&quot;&gt;     </span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;!-- omitted for brevity ... --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;/div&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;%} else if ((field.data_type === &quot;text&quot;)) {%&gt;  &lt;div class=&quot;block&quot;&gt;     </span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;!-- omitted for brevity ... --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;/div&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;%} else if ((field.data_type === &quot;bigint&quot;)) {%&gt;  &lt;div class=&quot;block&quot;&gt;     </span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;AppSelect</span></span>
<span class="line"><span style="color:#A6ACCD;">          v-if=&quot;&lt;%= tableForeignKeysAssoc.find(element =&gt; element.column_name === field.column_name).foreign_table_name; %&gt;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">          :options=&quot;&lt;%= tableForeignKeysAssoc.find(element =&gt; element.column_name === field.column_name).foreign_table_name; %&gt;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">          v-model=&quot;form.&lt;%= field.column_name; %&gt;&quot;</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">          label=&quot;&lt;%= fn.uCamelCase(fn.singular(fn.foreignTableName(field.column_name, tableForeignKeysAssoc))); %&gt;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">          :error=&quot;v$.&lt;%= field.column_name; %&gt;.$error ? v$.&lt;%= field.column_name; %&gt;.$errors[0].$message : null&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;/div&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;%} else if ((field.data_type === &quot;boolean&quot;)) {%&gt;  &lt;div class=&quot;block&quot;&gt;     </span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;!-- omitted for brevity ... --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      &lt;/div&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;%}%&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;%}});%&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;!-- omitted for brevity ... --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/form&gt;</span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@submit.prevent</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">submit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">grid lg:grid-cols-2 gap-4</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">&lt;!-- omitted for brevity ... --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">block</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">     </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">AppSelect</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">countries</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">:options</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">countries</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">form.country_id</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">label</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Country</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">:error</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">v$.country_id.$error ? v$.country_id.$errors[0].$message : null</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">      /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">&lt;!-- omitted for brevity ... --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="fn-singular" tabindex="-1"><code>fn.singular</code>: <a class="header-anchor" href="#fn-singular" aria-label="Permalink to &quot;\`fn.singular\`:&quot;">​</a></h2><h2 id="fn-ucamelcase" tabindex="-1"><code>fn.uCamelCase</code>: <a class="header-anchor" href="#fn-ucamelcase" aria-label="Permalink to &quot;\`fn.uCamelCase\`:&quot;">​</a></h2><h2 id="fn-v-excludefields" tabindex="-1"><code>fn.v.excludeFields</code>: <a class="header-anchor" href="#fn-v-excludefields" aria-label="Permalink to &quot;\`fn.v.excludeFields\`:&quot;">​</a></h2><h2 id="fn-v-noid" tabindex="-1"><code>fn.v.noId</code>: <a class="header-anchor" href="#fn-v-noid" aria-label="Permalink to &quot;\`fn.v.noId\`:&quot;">​</a></h2><h2 id="fn-v-noidandexcludefields" tabindex="-1"><code>fn.v.noIdAndExcludeFields</code>: <a class="header-anchor" href="#fn-v-noidandexcludefields" aria-label="Permalink to &quot;\`fn.v.noIdAndExcludeFields\`:&quot;">​</a></h2>`,20),p=[e];function t(c,r,i,D,y,C){return n(),a("div",null,p)}const A=s(o,[["render",t]]);export{F as __pageData,A as default};
